/* ALPHA VERSION
 * Written by Will Hastings/ Aidan Milston
 * Macro to read magnification from metadata of a DM3, add an appropriate sized scale bar and export as 32 bit TIFF and 8 bit JPG.
 * Make DM3, JPG and TIFF folders in the same directory.
 * Currently supported mags:
 *				12kx  - 500nm Scale bar
 *				15kx  - 500nm Scale bar
 *				20kx  - 500nm Scale bar
 *              25kx  - 500nm Scale bar
 *				40kx  - 500nm Scale bar
 *				50kx  - 200nm Scale bar
 *				60kx  - 200nm Scale bar
 *				80kx  - 100nm Scale bar
 *				100kx - 100nm Scale bar
 *				120kx - 100nm Scale bar
 *				150kx - 100nm Scale bar
 *				200kx -  50nm Scale bar
 */

input = getDirectory("Select Input directory");
outputT = getDirectory("Select TIFF Output directory");
outputJ = getDirectory("Select JPG Output directory");
suffix = ".dm3";

processFolder(input);

function processFolder(input) {
	list = getFileList(input);
	for (i = 0; i < list.length; i++) {
		if(File.isDirectory(input + list[i]))
			processFolder("" + input + list[i]);
		if(endsWith(list[i], suffix))
			processFile(input, outputT, outputJ, list[i]);
	}
}

function processFile(input, outputT, outputJ, file) {
	open(input + file);
	selectWindow(file);
	string = Property.getInfo();
	array = split(string, "\n");
	temp = substring(array[221], 0);
	if (temp.startsWith("root.ImageList.1.ImageTags.Microscope Info")){
	mag = substring(array[229], 69);}
	else if (temp.startsWith("root.ImageList.1.ImageTags.InSitu")){
	mag = substring(array[230], 69);}
	if (mag == "12000.0"){
	size=500;}
	else if (mag == "15000.0"){
	size=500;}
	else if (mag == "20000.0"){
	size=500;}
	else if (mag == "25000.0"){
	size=500;}
	else if (mag == "40000.0"){
	size=200;}
	else if (mag == "50000.0"){
	size=200;}
	else if (mag == "60000.0"){
	size=200;}
	else if (mag == "80000.0"){
	size=100;}
	else if (mag == "100000.0"){
	size=100;}
	else if (mag == "120000.0"){
	size=100;}
	else if (mag == "150000.0"){
	size=100;}
	else if (mag == "200000.0"){
	size=50;}
	else {
		size=0;
		print("Error!", file, "has unsupported mag of", mag);
	} 
	print(mag);
	AnalyseImage();
	
	newfile = File.getNameWithoutExtension(file);
	saveAs("TIFF", outputT + newfile+".tiff");
	saveAs("jpg", outputJ + newfile+".jpg");
	close();
}

function AnalyseImage(){
	makeRectangle(50, 3796, 1200, 250);
	LL = getValue("Mean");
	
	makeRectangle(2846, 3796, 1200, 250);
	LR = getValue("Mean");
	
	makeRectangle(50, 0, 1200, 250);
	UL = getValue("Mean");
	
	makeRectangle(2846, 0, 1200, 250);
	UR = getValue("Mean");
	
	makeRectangle(0,0,0,0);

	calculate(UL,UR,LL,LR);
}
function calculate(UL, UR, LL, LR) {

    lowest = Math.min(UL,UR);
    lowest1 = Math.min(LL, LR);
    lowest2 = Math.min(lowest,lowest1);
	if (lowest2 == UL){
		lowest3 = "Upper Left";
	}
	else if (lowest2 == UR){
		lowest3 = "Upper Right";
	}
	else if (lowest2 == LL){
		lowest3 = "Lower Left";
	}
	else if (lowest2 == LR){
		lowest3 = "Lower Right";
	}
	addScaleBar(size, lowest3);
}

function addScaleBar(size, placement) {

	if (size >1){
		if(placement == "Lower Left"){
		run("Scale Bar...", "width=size height=40 font=90 color=White background=None location=[Lower Left] bold");
	print(file, "LL");}
		else if(placement == "Upper Left"){
		run("Scale Bar...", "width=size height=40 font=90 color=White background=None location=[Upper Left] bold");
print(file, "UL");}
		else if(placement == "Lower Right"){
		run("Scale Bar...", "width=size height=40 font=90 color=White background=None location=[Lower Right] bold");
		print(file, "LR");}
		else if(placement == "Upper Right"){
		run("Scale Bar...", "width=size height=40 font=90 color=White background=None location=[Upper Right] bold");
		print(file, "UR");}
		}
	else if (size == 0){print("unsupported size!");}
}